//CHECKSUM:7593c3db9e786e39f1fcdd16244a4794489fd0fa8daab37a85e94c2ef4948498
"use strict";

/**
 * Save all the extracted slots in the session
 */
const slotExtract = async () => {
  // Make sure extractedSlots exists
  if (!event.state.session.extractedSlots) {
    event.state.session.extractedSlots = {};
  }

  if (!event.nlu.slots) {
    return;
  }

  for (const key of Object.keys(event.nlu.slots)) {
    let slot = event.nlu.slots[key]; // Slot is an array when the NLU is confused about the results.
    // The array is sorted by confidence so we take the first index.

    if (Array.isArray(slot)) {
      slot = slot[0];
    } // Make sure we don't override a previous slot


    if (!event.state.session.extractedSlots[slot.name]) {
      event.setFlag(bp.IO.WellKnownFlags.FORCE_PERSIST_STATE, true);
      event.state.session.extractedSlots[slot.name] = {
        value: slot.value,
        timestamp: Date.now()
      };
      event.state.session.extractedSlots['notFound'] = 0;
    }
  }
};

return slotExtract();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIjAwX2V4dHJhY3Rfc2xvdHMuanMiXSwibmFtZXMiOlsic2xvdEV4dHJhY3QiLCJldmVudCIsInN0YXRlIiwic2Vzc2lvbiIsImV4dHJhY3RlZFNsb3RzIiwibmx1Iiwic2xvdHMiLCJrZXkiLCJPYmplY3QiLCJrZXlzIiwic2xvdCIsIkFycmF5IiwiaXNBcnJheSIsIm5hbWUiLCJzZXRGbGFnIiwiYnAiLCJJTyIsIldlbGxLbm93bkZsYWdzIiwiRk9SQ0VfUEVSU0lTVF9TVEFURSIsInZhbHVlIiwidGltZXN0YW1wIiwiRGF0ZSIsIm5vdyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7O0FBR0EsTUFBTUEsV0FBVyxHQUFHLFlBQVk7QUFDOUI7QUFDQSxNQUFJLENBQUNDLEtBQUssQ0FBQ0MsS0FBTixDQUFZQyxPQUFaLENBQW9CQyxjQUF6QixFQUF5QztBQUN2Q0gsSUFBQUEsS0FBSyxDQUFDQyxLQUFOLENBQVlDLE9BQVosQ0FBb0JDLGNBQXBCLEdBQXFDLEVBQXJDO0FBQ0Q7O0FBRUQsTUFBSSxDQUFDSCxLQUFLLENBQUNJLEdBQU4sQ0FBVUMsS0FBZixFQUFzQjtBQUNwQjtBQUNEOztBQUVELE9BQUssTUFBTUMsR0FBWCxJQUFrQkMsTUFBTSxDQUFDQyxJQUFQLENBQVlSLEtBQUssQ0FBQ0ksR0FBTixDQUFVQyxLQUF0QixDQUFsQixFQUFnRDtBQUM5QyxRQUFJSSxJQUFJLEdBQUdULEtBQUssQ0FBQ0ksR0FBTixDQUFVQyxLQUFWLENBQWdCQyxHQUFoQixDQUFYLENBRDhDLENBRTlDO0FBQ0E7O0FBQ0EsUUFBSUksS0FBSyxDQUFDQyxPQUFOLENBQWNGLElBQWQsQ0FBSixFQUF5QjtBQUN2QkEsTUFBQUEsSUFBSSxHQUFHQSxJQUFJLENBQUMsQ0FBRCxDQUFYO0FBQ0QsS0FONkMsQ0FNNUM7OztBQUVGLFFBQUksQ0FBQ1QsS0FBSyxDQUFDQyxLQUFOLENBQVlDLE9BQVosQ0FBb0JDLGNBQXBCLENBQW1DTSxJQUFJLENBQUNHLElBQXhDLENBQUwsRUFBb0Q7QUFDbERaLE1BQUFBLEtBQUssQ0FBQ2EsT0FBTixDQUFjQyxFQUFFLENBQUNDLEVBQUgsQ0FBTUMsY0FBTixDQUFxQkMsbUJBQW5DLEVBQXdELElBQXhEO0FBQ0FqQixNQUFBQSxLQUFLLENBQUNDLEtBQU4sQ0FBWUMsT0FBWixDQUFvQkMsY0FBcEIsQ0FBbUNNLElBQUksQ0FBQ0csSUFBeEMsSUFBZ0Q7QUFDOUNNLFFBQUFBLEtBQUssRUFBRVQsSUFBSSxDQUFDUyxLQURrQztBQUU5Q0MsUUFBQUEsU0FBUyxFQUFFQyxJQUFJLENBQUNDLEdBQUw7QUFGbUMsT0FBaEQ7QUFJQXJCLE1BQUFBLEtBQUssQ0FBQ0MsS0FBTixDQUFZQyxPQUFaLENBQW9CQyxjQUFwQixDQUFtQyxVQUFuQyxJQUFpRCxDQUFqRDtBQUNEO0FBQ0Y7QUFDRixDQTNCRDs7QUE2QkEsT0FBT0osV0FBVyxFQUFsQiIsInNvdXJjZVJvb3QiOiIvdmFyL2xpYi9qZW5raW5zL3dvcmtzcGFjZS9idWlsZC13aW5kb3dzL21vZHVsZXMvYmFzaWMtc2tpbGxzL3NyYy9iYWNrZW5kIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBTYXZlIGFsbCB0aGUgZXh0cmFjdGVkIHNsb3RzIGluIHRoZSBzZXNzaW9uXG4gKi9cbmNvbnN0IHNsb3RFeHRyYWN0ID0gYXN5bmMgKCkgPT4ge1xuICAvLyBNYWtlIHN1cmUgZXh0cmFjdGVkU2xvdHMgZXhpc3RzXG4gIGlmICghZXZlbnQuc3RhdGUuc2Vzc2lvbi5leHRyYWN0ZWRTbG90cykge1xuICAgIGV2ZW50LnN0YXRlLnNlc3Npb24uZXh0cmFjdGVkU2xvdHMgPSB7fVxuICB9XG5cbiAgaWYgKCFldmVudC5ubHUuc2xvdHMpIHtcbiAgICByZXR1cm5cbiAgfVxuXG4gIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKGV2ZW50Lm5sdS5zbG90cykpIHtcbiAgICBsZXQgc2xvdCA9IGV2ZW50Lm5sdS5zbG90c1trZXldXG4gICAgLy8gU2xvdCBpcyBhbiBhcnJheSB3aGVuIHRoZSBOTFUgaXMgY29uZnVzZWQgYWJvdXQgdGhlIHJlc3VsdHMuXG4gICAgLy8gVGhlIGFycmF5IGlzIHNvcnRlZCBieSBjb25maWRlbmNlIHNvIHdlIHRha2UgdGhlIGZpcnN0IGluZGV4LlxuICAgIGlmIChBcnJheS5pc0FycmF5KHNsb3QpKSB7XG4gICAgICBzbG90ID0gc2xvdFswXVxuICAgIH0gLy8gTWFrZSBzdXJlIHdlIGRvbid0IG92ZXJyaWRlIGEgcHJldmlvdXMgc2xvdFxuXG4gICAgaWYgKCFldmVudC5zdGF0ZS5zZXNzaW9uLmV4dHJhY3RlZFNsb3RzW3Nsb3QubmFtZV0pIHtcbiAgICAgIGV2ZW50LnNldEZsYWcoYnAuSU8uV2VsbEtub3duRmxhZ3MuRk9SQ0VfUEVSU0lTVF9TVEFURSwgdHJ1ZSlcbiAgICAgIGV2ZW50LnN0YXRlLnNlc3Npb24uZXh0cmFjdGVkU2xvdHNbc2xvdC5uYW1lXSA9IHtcbiAgICAgICAgdmFsdWU6IHNsb3QudmFsdWUsXG4gICAgICAgIHRpbWVzdGFtcDogRGF0ZS5ub3coKVxuICAgICAgfVxuICAgICAgZXZlbnQuc3RhdGUuc2Vzc2lvbi5leHRyYWN0ZWRTbG90c1snbm90Rm91bmQnXSA9IDBcbiAgICB9XG4gIH1cbn1cblxucmV0dXJuIHNsb3RFeHRyYWN0KClcbiJdfQ==